// -- DO NOT REMOVE ----------------------------------------------------------
// !: arch: all
// !: sarc: all
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// !: codepage: cp866
// !: d: Модуль содержит реализацию функции синхронизации времени.
// !: -:
// ---------------------------------------------------------------------------
#include <mapi.h>
// ---------------------------------------------------------------------------
// !: sn: s_mapi_syntime
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// !: sd: Структура сообщения для синхронизации времени
// !: sc: uint32, cmd
// !: cd: тип команды, всегда равен MAPI_SYNTIME
// !: sc: uint32, time_s
// !: cd: время в секундах от 01.01.1970
// ---------------------------------------------------------------------------
// !: fn: int32 mapi_syntime( uint32 d, uint32 tm_s )
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// !: d: <b>Описание:</b><br>
// !: d: <br>
// !: d: Функция отправляет сообщение типа s_mapi_syntime процессу, на который
// !: d: ссылается идентификатор ресурса d (полученный вызовом msg_discover).
// !: d: Процесс принявший сообщение должен вызвать функцию time_set с параметром
// !: d: s_mapi_syntime::tm_s.<br>
// !: d: <br>
// !: d: <b>Возвращаемые значения:</b><br>
// !: d: <br>
// !: d: В слуаче успеха функци возвращает OSE_OK, иначе одну из системных ошибок.<br>
// ---------------------------------------------------------------------------



/**************************************************************************************************
Syntax:      	    int32 mapi_syntime( uint32 d, uint32 tm_s )
Remarks:			Функция отправки системного сообщения процессу ядра, синхронизации системного времени от часов реального времени
Returns:
***************************************************************************************************/
int32 mapi_syntime( uint32 d, uint32 tm_s )
{
  s_mapi_syntime m;
  m.cmd = MAPI_SYNTIME;
  m.tm_s = tm_s;
  return msg_send( d, &m, sizeof(m) );
}
// ---------------------------------------------------------------------------
